# -*- mode: tqfolder -*-

################################################################
##
##  Full MC and data-driven Fakes cuts in Signal Region.
##  CutTruth requires that sample folders would be tagged according
##      to truth labels.
##  The first cut CutChannel selects channel based on what is
##      requested in config file.
##
#################################################################

$include("configCommon/htautau_lephad_common_cuts.def");

# common cuts for (SR, VR, TCR, WCR) X (ID, Anti-ID, Anti-Iso) regions:
@*/CutBase{
    +CutTruth{
        <.cutExpression = "{ ($(isData)||$(isSig)||$(isAntiISO)||($(isAntiID)&&$(isWjets))) ? 1 :
                            ( ($(isInc)&&([TruthSelector]==30 || [TruthSelector]==20 || [TruthSelector]==5)) ) }",
         .weightExpression = "{ $(isData) ? 1 : [ScaleFactor_$(weightvariation)] }", .title="Truth">
        # || ($(isTT)&&([TruthSelector]==30)) || ($(isTMu)&&([TruthSelector]==20)) || ($(isTEl)&&([TruthSelector]==5))
        +CutAll{
            <.cutExpression = " [lep_0_id_medium==1 && lep_0_p4.Pt()>30 && tau_0_p4.Pt()>25 && fabs(tau_0_p4.Eta())<2.3 && lephad_dphi>2.4]",
             .weightExpression = "$(isTop)? [bsmlephad_topsys_$(ttbarweight)]:1.", .title="All">
            +CutISO{
                <.cutExpression = " $(isAntiISO) ? ((lep_0==2 && lep_0_iso_Gradient==0) || (lep_0==1 && ( (lep_0_p4.Pt()<50. && lep_0_iso_FCTightTrackOnly==0) || (lep_0_p4.Pt()>=50. && lep_0_iso_FCTight==0) ))) : ((lep_0==2 && lep_0_iso_Gradient==1) || (lep_0==1 && ( (lep_0_p4.Pt()<50. && lep_0_iso_FCTightTrackOnly==1) || (lep_0_p4.Pt()>=50. && lep_0_iso_FCTight==1) )))",
                .weightExpression = "$(isAntiISO) ? [isoreweight_$(isovar)] : 1", .title="ISO">
                +CutID{
                    <.cutExpression = " $(isAntiID) ? (tau_0_jet_bdt_score_trans>0.01 && tau_0_jet_bdt_medium==0) : tau_0_jet_bdt_medium==1",
                    .weightExpression = "$(isAntiID) ? [ptreweight_$(fakevar)]*[extraporeweight_$(extraposf)] : 1", .title="ID">
                    +CutOS{
                        <.cutExpression = "lephad_qxq==-1", .title="OS">
                    }
                }
            }
        }
    }
}

# Signal Region
@*/CutOS{
    +CutVisMassVeto{
        <.cutExpression=" lep_0==1? 1 : ( (lephad_p4.M() > 110 || lephad_p4.M() < 80)? 1 : 0 ) ", .title="Vis mass veto">
        +CutMT{
            <.cutExpression = "lephad_mt_lep0_met<40.", .title="MT">
            +CutBveto1p{
                <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1", .title="Bveto1p">
                }
            +CutBtag1p{
                < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="Btag1p",>
                }
            +CutBveto3p{
                <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3", .title="Bveto3p">
                }
            +CutBtag3p{
                < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="Btag3p",>
                }
            }
        }
    }

# Make plots without visible mass cut,
# especially interesting is mvis itself.
@*/CutOS{
    +CutNOVisMassMT{
        <.cutExpression = "lephad_mt_lep0_met<40.", .title="NOVisMassMT">
        +CutNOVisMassBveto1p{
            <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1", .title="NOVisMassBveto1p">
            }
        +CutNOVisMassBtag1p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="NOVisMassBtag1p",>
            }
        +CutNOVisMassBveto3p{
            <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3", .title="NOVisMassBveto3p">
            }
        +CutNOVisMassBtag3p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="NOVisMassBtag3p",>
            }
        }
    }

# make N-1 plot without mT cut,
# especially interesting is mT itself.
 @*/CutVisMassVeto{
    +CutNOMTBveto1p{
        <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1", .title="NOMTBveto1p">
        }
    +CutNOMTBtag1p{
        < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="NOMTBtag1p",>
        }
    +CutNOMTBveto3p{
        <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3", .title="NOMTBveto3p">
        }
    +CutNOMTBtag3p{
        < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="NOMTBtag3p",>
        }
    }


# Validation Region
@*/CutVisMassVeto{
    +CutVRMT{
        <.cutExpression = "lephad_mt_lep0_met>40. && lephad_mt_lep0_met<60.", .title="VRMT">
        +CutVRBveto1p{
            <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1", .title="VRBveto1p">
            }
        +CutVRBtag1p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="VRBtag1p",>
            }
        +CutVRBveto3p{
            <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3", .title="VRBveto3p">
            }
        +CutVRBtag3p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="VRBtag3p",>
            }
        }
    }

# cut at high tau_0_ele_bdt_score_trans where data peaks for some reason
@*/CutVRMT{
    +CutVReleBveto1p{
        <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1 && tau_0_ele_bdt_score_trans<0.95", .title="VRBveto1p">
        }
    +CutVReleBtag1p{
        < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1 && tau_0_ele_bdt_score_trans<0.95", .title="VRBtag1p",>
        }
    +CutVReleBveto3p{
        <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3 && tau_0_ele_bdt_score_trans<0.95", .title="VRBveto3p">
        }
    +CutVReleBtag3p{
        < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3 && tau_0_ele_bdt_score_trans<0.95", .title="VRBtag3p",>
        }
    }

# TCR
@*/CutOS{
    +CutTCR{
        <.cutExpression = "lephad_mt_lep0_met>100.", .title="TCRMT">
        +CutTCRBtag1p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="TCRBtag1p",>
            }
        +CutTCRBtag3p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="TCRBtag3p",>
            }
        }
    }

# WCR
@*/CutOS{
    +CutVisMassVeto {
        # vis mass veto only in ehad bveto channel.
        <.cutExpression=" (lep_0==2 && n_bjets==0)? ( (lephad_p4.M() > 110 || lephad_p4.M() < 80)? 1 : 0 ) : 1 ", .title="Vis mass veto">
        +CutWCR{
            <.cutExpression = "lephad_mt_lep0_met>60. && lephad_mt_lep0_met<150.", .title="WCRMT">
            +CutWCRBveto1p{
                < .cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1", .title="WCRBveto1p",>
            }
            +CutWCRBveto3p{
            < .cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3", .title="WCRBveto3p",>
            }
            +CutWCRBtag1p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="WCRBtag1p",>
            }
            +CutWCRBtag3p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="WCRBtag3p",>
            }
        }
    }
}


# SSWCR
@*/CutID{
    +CutSSWCR{
        <.cutExpression = "lephad_mt_lep0_met>60. && lephad_qxq==1", .title="SSWCRMT">
        +CutSSWCRBtag1p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="SSWCRBtag1p",>
            }
        +CutSSWCRBtag3p{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="SSWCRBtag3p",>
            }
        }
    }
