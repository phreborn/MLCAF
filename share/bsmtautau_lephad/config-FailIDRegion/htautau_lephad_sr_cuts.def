# -*- mode: tqfolder -*-

################################################################
##
##  Full MC and data-driven Fakes cuts in Signal Region.
##  CutTruth requires that sample folders would be tagged according
##      to truth labels.
##  The first cut CutChannel selects channel based on what is
##      requested in config file.
##
#################################################################

$include("configCommon/htautau_lephad_common_cuts.def");

@*/CutBase{
    +CutTruth{
         <.cutExpression = "{ ($(isData)||$(isAntiISO)) ? 1 : ( $(isInc)? ([TruthTauSelector]==30 || [TruthTauSelector]==20 || [TruthTauSelector]==5) :
                            (  ($(isTT)&&[TruthTauSelector]==30) || ($(isTL)&&([TruthTauSelector]==20||[TruthTauSelector]==5)) || ($(isJET)&&[TruthTauSelector]==-30) ) ) }",
         .weightExpression = "{ $(isData) ? 1 : [ScaleFactor_$(weightvar)] }", .title="Truth">
        +CutAll{
            <.cutExpression = " [lep_0_id_medium==1 && lep_0_p4.Pt()>30 && tau_0_p4.Pt()>25 && fabs(tau_0_p4.Eta())<2.3 && lephad_dphi>2.4]", .title="All">
            +CutISO{
                <.cutExpression = " $(isAntiISO) ? ((lep_0==2 && lep_0_iso_Gradient==0) || (lep_0==1 && lep_0_iso_FCTight_FixedRad==0 )) : ((lep_0==2 && lep_0_iso_Gradient==1) || (lep_0==1 && lep_0_iso_FCTight_FixedRad==1 ))",
                .weightExpression = "$(isAntiISO)?($(UseQCDSF)?[LeptonFakes_$(isovar)]*[LeptonFakesReweight_$(isovar)]:[LeptonFakes_$(isovar)]):1", .title="ISO">
                +CutFailID{
                    <.cutExpression = "tau_0_jet_bdt_score_trans>$(TauIDScoreCut) && tau_0_jet_bdt_medium==0", .title="FailID">
                }
            }
        }
    }
}

# Signal Region
@*/CutFailID{
    +CutVisMassVeto{
        <.cutExpression=" lep_0==1? 1 : ( (lephad_p4.M() > 110 || lephad_p4.M() < 80)? 1 : 0 ) ", .title="Vis mass veto">
        +CutMTOS{
            <.cutExpression = "lephad_mt_lep0_met<40.&&lephad_qxq==-1", .title="MTOS">
            +CutBveto1pFailID{
                <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1", .title="Bveto1pFailID">
            }
            +CutBtag1pFailID{
                < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="Btag1pFailID">
            }
            +CutBveto3pFailID{
                <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3", .title="Bveto3pFailID">
            }
            +CutBtag3pFailID{
                < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="Btag3pFailID">
            }
        }
    }
}

# TCR
@*/CutFailID{
    +CutTCRMTOS{
        <.cutExpression = "lephad_mt_lep0_met>110. && lephad_qxq==-1", .title="TCRMTOS">
        +CutTCRBtag1pFailID{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="TCRBtag1pFailID">
        }
        +CutTCRBtag3pFailID{
            < .cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="TCRBtag3pFailID">
        }
    }
}

# Validation Region
@*/CutVisMassVeto{
    +CutVRMTOS{
        <.cutExpression = "lephad_mt_lep0_met>40. && lephad_mt_lep0_met<60. && lephad_qxq==-1", 
        .weightExpression = "$(isTop) && $(UseTopSF) && !($(isAntiISO)||$(isAntiID)) ? [TopReweight_$(topvar)]:1", .title="VRMTOS">
        +CutVRBveto1pFailID{
            <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==1", .title="VRBveto1pFailID">
        }
        +CutVRBtag1pFailID{
            <.cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==1", .title="VRBtag1pFailID">
        }
        +CutVRBveto3pFailID{
            <.cutExpression = "n_bjets == 0 && tau_0_n_charged_tracks==3", .title="VRBveto3pFailID">
        }
        +CutVRBtag3pFailID{
            <.cutExpression = "n_bjets > 0 && tau_0_n_charged_tracks==3", .title="VRBtag3pFailID">
        }
    }
}

# WCR OS
@*/CutFailID{
    +CutWCRVisMassVeto{
        <.cutExpression=" (lep_0==2 && n_bjets==0)? ( (lephad_p4.M() > 110 || lephad_p4.M() < 80)? 1 : 0 ) : 1", .title="WCR Vis mass veto">
        +CutWCRMTOS{
            <.cutExpression = "lephad_qxq==-1 && lephad_mt_lep0_met>60 && (n_bjets==0 ? lephad_mt_lep0_met < 150 : lephad_mt_lep0_met < 110)", .title="WCRMTOS">
            +CutWCRBveto1pOSFailID{
                <.cutExpression = "n_bjets==0 && tau_0_n_charged_tracks==1", .title="WCRBveto1pOSFailID">
            }
            +CutWCRBveto3pOSFailID{
                <.cutExpression = "n_bjets==0 && tau_0_n_charged_tracks==3", .title="WCRBveto3pOSFailID">
            }
            +CutWCRBtag1pOSFailID{
                <.cutExpression = "n_bjets>0 && tau_0_n_charged_tracks==1", .title="WCRBtag1pOSFailID">
            }
            +CutWCRBtag3pOSFailID{
                <.cutExpression = "n_bjets>0 && tau_0_n_charged_tracks==3", .title="WCRBtag3pOSFailID">
            }
        }
    }      
}
# WCR SS
@*/CutFailID{
    +CutWCRMTSS{
        <.cutExpression = "lephad_qxq==1 && lephad_mt_lep0_met>60", .title="WCRMTSS">
        +CutWCRBveto1pSSFailID{
            <.cutExpression = "n_bjets==0 && tau_0_n_charged_tracks==1", .title="WCRBveto1pSSFailID">
        }
        +CutWCRBveto3pSSFailID{
            <.cutExpression = "n_bjets==0 && tau_0_n_charged_tracks==3", .title="WCRBveto3pSSFailID">
        }
        +CutWCRBtag1pSSFailID{
            <.cutExpression = "n_bjets>0 && tau_0_n_charged_tracks==1", .title="WCRBtag1pSSFailID">
        }
        +CutWCRBtag3pSSFailID{
            <.cutExpression = "n_bjets>0 && tau_0_n_charged_tracks==3", .title="WCRBtag3pSSFailID">
        }
    }      
}
