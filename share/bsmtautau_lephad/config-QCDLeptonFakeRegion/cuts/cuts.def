# -*- mode: tqfolder -*-

################################################################
##
##  FAKE FACTOR QCD Lepton Fake.
##
#################################################################

$include("bsmtautau_lephad/config-Common/cuts/cuts.def");



@ */CutMaterialCorrection {
    +CutTruth {
        <.cutExpression="{ $(isData) || $(isSig) || ($(isTTL) && ([TruthTauSelector] == 20 || [TruthTauSelector] == 5 ||[TruthTauSelector] == 30)) || 
         ($(isJFT) && [TruthTauSelector] == -30)}",
         .weightExpression="{$(isData) ? 1 : [ScaleFactor]}", .title="Truth">

        +CutLeptonBasic {
            <.cutExpression="lep_0_p4.Pt() > 30 && lep_0_id_medium == 1", .title = "Lepton basic cut">
        
            +CutTauBasic {
                <.cutExpression="tau_0_p4.Pt() > 25 && fabs(tau_0_p4.Eta()) < 2.3 &&
                  (tau_0_n_charged_tracks == 1 || tau_0_n_charged_tracks == 3) ", .title="Tau basic cut">

                +CutLepTau {
                    <.cutExpression="lephad_dphi>2.4", .title="Lephad dphi">

                    +CutSingleLepton {
                        <.cutExpression="(n_electrons + n_muons) == 1", .title="SingleLepton">
                        +CutTauIDScore {
                            <.cutExpression="$(TauIDScore) < $(TauIDScoreCut)", .title="Tau score cut">
                        } #End: CutTauIDScore
                    } #End: CutSingleLepton
                } #End: CutLepTau
            } #End: CutTauBasic
        } #End: CutLeptonBasic
    } #End: CutTruth
} #End: CutMaterialCorrection



# Divide to OS/SS region
@ */CutTauIDScore {
    +CutOS {
        <.cutExpression="lephad_qxq == -1", .title="OS", regionCharge="OS">
    } #End: CutOS
    
    +CutSS {
        <.cutExpression="lephad_qxq == 1", .title="SS", regionCharge="SS"> 
    } #End: CutSS
} #End: CutTauIDScore



# Divide to Bveto/Btag region
@ */CutTauIDScore/Cut*S {
    +Cut$(regionCharge)Bveto {
        <.cutExpression="$(NbJets)==0", .title="$(regionCharge)Bveto", regionNbjets="Bveto">
    } #End: Cut[OS/SS]Bveto

    +Cut$(regionCharge)Btag {
        <.cutExpression="$(NbJets)>=1", .title="$(regionCharge)Btag", regionNbjets="Btag">
    } #End: Cut[OS/SS]Btag
} #End: CutTauIDScore/Cut[OS/SS]



# Divide to different MT region
@ */CutTauIDScore/Cut*S/Cut*B* {
    +Cut$(regionCharge)$(regionNbjets)QCDLFR {
        <.cutExpression="lephad_mt_lep0_met <= 30", 
        .title="$(regionCharge)$(regionNbjets)QCDLFR">
    }
}



# Divide to PassISO/FailISO ergiion
@ */Cut*QCDLFR {
    +Cut$(regionCharge)$(regionNbjets)QCDLFRPassISO {
        <.cutExpression="($(isQCDFakes) ? $(isFailISO) : $(isPassISO))",
         .weightExpression="($(isQCDFakes) ? $(applyLFF) : 1)", .title="$(regionCharge)$(regionNbjets)QCDLFRPassISO">
    }

    +Cut$(regionCharge)$(regionNbjets)QCDLFRFailISO {
        <.cutExpression="($(isQCDFakes) ? $(isPassISO) : $(isFailISO))",
         .weightExpression="($(isQCDFakes) ? 1 / $(applyLFF) : 1)", .title="$(regionCharge)$(regionNbjets)QCDLFRFailISO">
    }
}



$replace("*/CutOS/*:*", regionCharge="OS");
$replace("*/CutSS/*:*", regionCharge="SS");
$replace("*/Cut*SBveto/*:*", regionNbjets="Bveto");
$replace("*/Cut*SBtag/*:*", regionNbjets="Btag");
