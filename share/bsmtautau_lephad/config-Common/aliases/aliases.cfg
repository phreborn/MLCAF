# -*- mode: config -*-

[prepare]

[initialize]

[analyze]

# alias as configuration of the analysis
# -- lepton isolation WP
aliases.ElectronIsoWP: Gradient
aliases.MuonIsoWP: FCTight_FixedRad 

# -- tauID WP
aliases.TauIDWP: rnn_medium
aliases.TauIDScore: tau_0_jet_rnn_score_trans 
aliases.TauIDScoreCut: "0.01"

# -- btagging WP
aliases.BtaggingWP: DL1r_FixedCutBEff_70

# -- parameterization of jets faking leptons
aliases.LFFPeriod: Combined
aliases.LFFParam: LeptonPtDphi
aliases.QCDTFFPeriod: Combined
aliases.QCDTFFParam: TauPt

# -- parameterization of jets faking taus
aliases.WFFPeriod: Combined
aliases.WFFParam: TauPt
aliases.WjetsSFParam: LeptonPt

# -- corrections will be truned on in specific regions
# -- do not modify the default values here 
aliases.UseQCDTFF: false
aliases.UseLeptonFF: false
aliases.UseQCDSF: false
aliases.UseWjetsFF: false
aliases.UseWjetsSF: false
aliases.UseTopSF: false
aliases.UseExtrapoSF: false

# -- global corrections
# -- could be turned on/off here
aliases.UseMaterialCorrection: true
aliases.UseLPXKfactor: true



# alias for convenience
# -- flag of lepton flavor
aliases.isElectron: "(lep_0 == 2)"
aliases.isMuon: "(lep_0 == 1)"

# -- only use inclusive Z sample below 120 
aliases.isInclusiveZ: "($(dsid) == 361106 || $(dsid) == 361107 || $(dsid) == 361108)"

# -- lepton isolation
aliases.ElectronISO: "lep_0_iso_$(ElectronIsoWP)"
aliases.MuonISO: "lep_0_iso_$(MuonIsoWP)"
aliases.isPassISO: "(($(isElectron) && $(ElectronISO) == 1) || ($(isMuon) && $(MuonISO) == 1))"
aliases.isFailISO: "(($(isElectron) && $(ElectronISO) == 0) || ($(isMuon) && $(MuonISO) == 0))"
aliases.applyLFF: "({$(UseLeptonFF) ? [LeptonFakes] : 1} * {$(UseQCDSF) ? [LeptonFakesReweight] : 1})"
aliases.applyQCDTFF: "{$(UseQCDTFF) ? [QCDJetFakeTau] : 1}"

# -- tau identification
aliases.TauID: "tau_0_jet_$(TauIDWP)"
aliases.isPassID: "$(TauID) == 1"
aliases.isFailID: "$(TauID) == 0 && $(TauIDScore) > $(TauIDScoreCut)"
aliases.applyWFF: "({$(UseWjetsFF) ? [JetFakes] : 1} * {$(UseWjetsSF) ? [JetFakesReweight] : 1})"

# -- extrapolation systematic uncertainty
aliases.applyVSF: "{$(UseExtrapoSF) ? [ExtrapolationSys] : 1}"

# -- btagging
aliases.NbJets: "n_bjets_$(BtaggingWP)"

[visualize]
