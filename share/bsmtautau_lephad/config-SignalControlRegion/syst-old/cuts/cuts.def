# -*- mode: tqfolder -*-

################################################################
##
## SR and VR 
##
#################################################################

$include("bsmtautau_lephad/config-Common/cuts/cuts.def");



@ */CutMaterialCorrection {
    +CutTruth {
        <.cutExpression="{ $(isData) || $(isSig) || ($(isTTL) && ([TruthTauSelector] == 20 || [TruthTauSelector] == 5 ||[TruthTauSelector] == 30)) || 
         ($(isJFT) && [TruthTauSelector] == -30)}",
         .weightExpression="{$(isData) ? 1 : [ScaleFactor]}", .title="Truth">

        +CutLeptonBasic {
            <.cutExpression="lep_0_p4.Pt() > 30 && lep_0_id_medium ==1", .title = "Lepton basic cut">
        
            +CutTauBasic {
                <.cutExpression="tau_0_p4.Pt() > 25 && fabs(tau_0_p4.Eta()) < 2.3 && 
                    (tau_0_n_charged_tracks == 1 || tau_0_n_charged_tracks == 3) && $(TauIDScore) > $(TauIDScoreCut)", 
                    .title="Tau basic cut">
                
                +CutLepTau {
                    <.cutExpression="lephad_dphi>2.4", .title="Lephad dphi">

                    +CutLeptonISO {
                        <.cutExpression="($(isQCDFakes) ? $(isFailISO) : $(isPassISO))",
                        .weightExpression="($(isQCDFakes) ? $(applyLFF) : 1)", .title="Lepton isolation">

                        +CutTauID {
                            <.cutExpression="($(isWTjetsFakes) ? $(isFailID) : $(isPassID))",
                            .weightExpression="($(isWTjetsFakes) ? ($(applyWFF) * $(applyVSF)) : 1)", .title="ID">

                        } #End: CutTauID
                    } #End: CutLeptonISO
                } #End: CutLepTau
            } #End: CutTauBasic
        } #End: CutLeptonBasic
    } #End: CutTruth
} #End: CutMaterialCorrection
        


# Divide to OS/SS region
@ */CutTauID {
    +CutOS {
        <.cutExpression="lephad_qxq == -1", .title="OS", regionCharge="OS">
    } #End: CutOS
    
    +CutSS {
        <.cutExpression="lephad_qxq == 1", .title="SS", regionCharge="SS"> 
    } #End: CutSS
} #End: CutTauID



# Divide to Bveto/Btag region
@ */CutTauID/Cut*S {
    +Cut$(regionCharge)Bveto {
        <.cutExpression="$(NbJets)==0", .title="$(regionCharge)Bveto", regionNbjets="Bveto">
    } #End: Cut[OS/SS]Bveto

    +Cut$(regionCharge)Btag {
        <.cutExpression="$(NbJets)>=1", .title="$(regionCharge)Btag", regionNbjets="Btag",
        .weightExpression="{($(isTop) && $(UseTopSF) && ! ($(isQCDFakes) || $(isWTjetsFakes))) ? [TopReweight] : 1}">
    } #End: Cut[OS/SS]Btag
} #End: CutTauID/Cut[OS/SS]



# Divide to different MT region
@ */CutTauID/Cut*S/Cut*B* {

    # Apply Zee Veto
    +Cut$(regionCharge)$(regionNbjets)VisMassVeto {
        <.cutExpression="(lep_0 == 2 ? ((lephad_p4.M() > 110 || lephad_p4.M() < 80) ? 1 : 0) : 1)", 
         .title="$(regionCharge)$(regionNbjets)VisMassVeto"> 
        
        +Cut$(regionCharge)$(regionNbjets)SR {
            <.cutExpression="lephad_mt_lep0_met < 40", 
            .title="$(regionCharge)$(regionNbjets)SR", regionMT="SR">
        } 
        
        +Cut$(regionCharge)$(regionNbjets)VR {
            <.cutExpression="lephad_mt_lep0_met > 40 && lephad_mt_lep0_met < 60", 
            .title="$(regionCharge)$(regionNbjets)VR", regionMT="VR">
        } 
    }
}



# Divide to 1p/3p region
@ */CutTauID/Cut*S/Cut*B*/Cut*Veto/Cut*R {
    +Cut$(regionCharge)$(regionNbjets)$(regionMT)1p {
        <.cutExpression="tau_0_n_charged_tracks == 1", .title="$(regionCharge)$(regionNbjets)$(regionMT)1p">
    }
    
    +Cut$(regionCharge)$(regionNbjets)$(regionMT)3p {
        <.cutExpression="tau_0_n_charged_tracks == 3", .title="$(regionCharge)$(regionNbjets)$(regionMT)3p">
    }
}



$replace("*/CutOS/*:*", regionCharge="OS");
$replace("*/CutSS/*:*", regionCharge="SS");
$replace("*/Cut*SBveto/*:*", regionNbjets="Bveto");
$replace("*/Cut*SBtag/*:*", regionNbjets="Btag");
$replace("*/Cut*VR/*:*", regionMT="VR");
$replace("*/Cut*SR/*:*", regionMT="SR");
