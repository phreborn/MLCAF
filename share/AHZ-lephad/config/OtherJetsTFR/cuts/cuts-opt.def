# -*- mode: tqfolder -*-

################################################################
## SR optimization: tau eta, visible mass, dphi, MT
#################################################################

$include("AHZ-lephad/config/common/cuts/cuts.def");

@ */CutMaterialCorrection {
    +CutTruth {
        <.cutExpression="{ $(isData) || $(isSig) || ($(isTTL) && ([TruthTauSelector] == 20 || [TruthTauSelector] == 5 ||[TruthTauSelector] == 30)) || 
         ($(isJet) && [TruthTauSelector] == -30)}",
         .weightExpression="{$(isData) ? 1 : [ScaleFactor]}", .title="Truth">

        +CutLeptonBasic {
            <.cutExpression="lep_0_p4.Pt() > 30 && lep_0_id_medium ==1", .title = "Lepton basic cut">
        
            +CutTauBasic {
                <.cutExpression="tau_0_p4.Pt() > 25 && fabs(tau_0_p4.Eta()) < 2.3 && 
                    (tau_0_n_charged_tracks == 1) ", .title="Tau basic cut">
                
                +CutBveto {
                   <.cutExpression="[$(NbJets)]==0", .title="Bveto", BJET="Bveto">
                
                   +CutLeptonISO {
                       <.cutExpression="($(isMultiJetsFake) ? $(isFailISO) : $(isPassISO))",
                       .weightExpression="($(isMultiJetsFake) ? ($(MultiJetsLFF))*($(FakeNom)) : 1)", .title="Lepton isolation">
                   } #End: CutLeptonISO
                } #End: CutBveto
            } #End: CutTauBasic
        } #End: CutLeptonBasic
    } #End: CutTruth
} #End: CutMaterialCorrection
        


@ */CutLeptonISO {
    +CutOS {
        <.cutExpression="lephad_qxq == -1", .title="OS", CHARGE="OS">
    } #End: CutOS
    
    +CutSS {
        <.cutExpression="lephad_qxq == 1", .title="SS", CHARGE="SS"> 
    } #End: CutSS
} #End: CutLeptonISO



@ */Cut*S {
    +Cut$(CHARGE)NoMT {
        <.cutExpression="1", .title="$(CHARGE)NoMT", MT="NoMT">
    }
    
    +Cut$(CHARGE)LowMT {
        <.cutExpression="lephad_mt_lep0_met<=40", .title="$(CHARGE)LowMT", MT="LowMT">
    }

    +Cut$(CHARGE)Medium1MT {
        <.cutExpression="lephad_mt_lep0_met>40&&lephad_mt_lep0_met<=60", .title="$(CHARGE)Medium1MT", MT="Medium1MT">
    }
    
    +Cut$(CHARGE)Medium2MT {
        <.cutExpression="lephad_mt_lep0_met>60&&lephad_mt_lep0_met<=150", .title="$(CHARGE)Medium2MT", MT="Medium2MT">
    }
    
    +Cut$(CHARGE)HighMT {
        <.cutExpression="lephad_mt_lep0_met>150", .title="$(CHARGE)HighMT", MT="HighMT">
    }
}

@ */Cut*MT {
    +Cut$(CHARGE)$(MT)NoDphi {
        <.cutExpression="1", .title="$(CHARGE)$(MT)NoDphi", DPHI="NoDphi">
    }

    +Cut$(CHARGE)$(MT)LowDphi {
        <.cutExpression="lephad_dphi<2.4", .title="$(CHARGE)$(MT)LowDphi", DPHI="LowDphi">
    }
    
    +Cut$(CHARGE)$(MT)HighDphi {
        <.cutExpression="lephad_dphi>2.4", .title="$(CHARGE)$(MT)HighDphi", DPHI="HighDphi">
    }
}



@ */Cut*Dphi {
    +Cut$(CHARGE)$(MT)$(DPHI)PassTauID {
        <.cutExpression="$(isPassID)", .title="$(CHARGE)$(MT)$(DPHI)PassTauID">
    }
    
    +Cut$(CHARGE)$(MT)$(DPHI)FailTauID {
        <.cutExpression="$(isFailID)", .title="$(CHARGE)$(MT)$(DPHI)FailTauID">
    }

    +Cut$(CHARGE)$(MT)$(DPHI)NoTauID {
        <.cutExpression="1", .title="$(CHARGE)$(MT)$(DPHI)NoTauID">
    }
}



$replace("*/CutOS/*:.name,.title", CHARGE="OS");
$replace("*/CutSS/*:.name,.title", CHARGE="SS");
$replace("*/Cut*NoMT/*:.name,.title", MT="NoMT");
$replace("*/Cut*LowMT/*:.name,.title", MT="LowMT");
$replace("*/Cut*Medium1MT/*:.name,.title", MT="Medium1MT");
$replace("*/Cut*Medium2MT/*:.name,.title", MT="Medium2MT");
$replace("*/Cut*HighMT/*:.name,.title", MT="HighMT");
$replace("*/Cut*NoDphi/*:.name,.title", DPHI="NoDphi");
$replace("*/Cut*LowDphi/*:.name,.title", DPHI="LowDphi");
$replace("*/Cut*HighDphi/*:.name,.title", DPHI="HighDphi");
