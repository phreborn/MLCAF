# -*- mode: tqfolder -*-

################################################################
## Top scale factor: region optimization
#################################################################

$include("AHZ-lephad/config/common/cuts/cuts.def");

@ */CutMaterialCorrection {
    +CutTruth {
        <.cutExpression="{ $(isData) || $(isSig) || ($(isTTL) && ([TruthTauSelector] == 20 || [TruthTauSelector] == 5 ||[TruthTauSelector] == 30)) || 
         ($(isJet) && [TruthTauSelector] == -30)}",
         .weightExpression="{$(isData) ? 1 : [ScaleFactor]}", .title="Truth">

        +CutLeptonBasic {
            <.cutExpression="lep_0_p4.Pt() > 30 && lep_0_id_medium == 1", .title = "Lepton basic cut">
        
            +CutTauBasic {
                <.cutExpression="tau_0_p4.Pt() > 25 && fabs(tau_0_p4.Eta()) < 2.3 &&
                  (tau_0_n_charged_tracks == 1 || tau_0_n_charged_tracks == 3) ", .title="Tau basic cut">
            
                +CutLeptonISO {
                    <.cutExpression="($(isMultiJetsFake) ? $(isFailISO) : $(isPassISO))",
                    .weightExpression="($(isMultiJetsFake) ? ($(MultiJetsLFF))*($(FakeNom)) : 1)", .title="Lepton isolation">
                    
                    # SS has little statistics
                    +CutOS {
                        <.cutExpression="lephad_qxq == -1", .title="OS">
                    } #End: CutOS
               } #End: CutLeptonISO
            } #End: CutTauBasic
        } #End: CutLeptonBasic
    } #End: CutTruth
} #End: CutMaterialCorrection



# Divide to different btag region
@ */CutOS {
    +CutTCR {
        <.cutExpression="$(NbJets)>=1 && lephad_dphi>2.4", .title="TCR">
    } #End: CutTCR
    
    +Cut2bTVR {
        <.cutExpression="$(NbJets)>=2 && lephad_dphi>=1.8 && lephad_dphi<=2.4", .title="2bTVR">
    } #End: Cut2bTVR
} #End: CutOS



# Divide to NoID/ID region
@ */Cut2bTVR {
    +Cut2bTVRNoTauID {
        <.cutExpression="1", TAU="NoTauID", .title="2bTVRNoTauID">
    }
    
    +Cut2bTVRTauID {
        <.cutExpression="$(isPassID)", TAU="TauID", .title="2bTVRTauID">
    }
}

@ */CutTCR {
    +CutTCRTauID {
        <.cutExpression="$(isPassID)", TAU="TauID", .title="TCRTauID">
    }
}



# Divide to different MT region
@ */Cut2bTVR*TauID {
    +Cut2bTVR$(TAU)NoMT {
        <.cutExpression="1", .title="2bTVR$(TAU)NoMT",
         .weightExpression="$(isTop) && $(ApplyTopSF) ? $(TopSF) : 1">
    }
    
    +Cut2bTVR$(TAU)LowMT {
        <.cutExpression="lephad_mt_lep0_met<120", .title="2bTVR$(TAU)LowMT",
         .weightExpression="$(isTop) && $(ApplyTopSF) ? $(TopSF) : 1">
    }

    +Cut2bTVR$(TAU)MediumMT {
        <.cutExpression="lephad_mt_lep0_met>=120 && lephad_mt_lep0_met<220", .title="2bTVR$(TAU)MediumMT",
         .weightExpression="$(isTop) && $(ApplyTopSF) ? $(TopSF) : 1">
    }

    +Cut2bTVR$(TAU)HighMT {
        <.cutExpression="lephad_mt_lep0_met>=220", title="2bTVR$(TAU)HighMT", .title=""2bTVR$(TAU)HighMT, 
         .weightExpression="$(isTop) && $(ApplyTopSF) ? $(TopSF) : 1">
    }
}

@ */CutTCRTauID {
    +CutTCRTauIDMediumMT {
        <.cutExpression="lephad_mt_lep0_met>=120 && lephad_mt_lep0_met<220", .title="TCRTauIDMediumMT",
         .weightExpression="$(isTop) && $(ApplyTopSF) ? $(TopSF) : 1">
    }
}

$replace("*/Cut2bTVRNoTauID/*:.title,.name", TAU="NoTauID");
$replace("*/Cut2bTVRTauID/*:.title,.name", TAU="TauID");
