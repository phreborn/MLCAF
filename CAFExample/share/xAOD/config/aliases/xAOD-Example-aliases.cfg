[analyze]

# CutChannels
aliases.fitsChannel: @Event$(cand).size() > 0

# CutVgammaVjet_overlap
aliases.Truth_hasFSRPhotonDR01: [SGAuxCDec:EventInfo:HIGG3DX_truth_hasFSRPhotonDR01]
aliases.Truth_inVGammaOverlap: [SGAuxCDec:EventInfo:HIGG3DX_inVGammaOverlap]

# CutOtherLep
aliases.nOtherElec: Event$(cand)[0].nOtherElectrons()
aliases.nOtherMuon: Event$(cand)[0].nOtherMuons()
aliases.lllFinalState: ($(nOtherElec) == 1 && $(nOtherMuon) == 0) || ($(nOtherElec) == 0 && $(nOtherMuon) == 1)

# CutZMass

# CutLeptonsPt
aliases.lep0:     Event$(cand)[0].part(0)
aliases.lep1:     Event$(cand)[0].part(1)
aliases.otherPart0: Event$(cand)[0].otherPart(0)

# CutTransWMass
aliases.TransMassW: "([ZBosonPairFakeIndex]==3 ? [TransMassWThirdLep]: ( [ZBosonPairFakeIndex]==2 ? [TransMassWSubleadLep]: [TransMassWLeadLep] ) )"
# CutFakeEl
# CutFakeMu
aliases.electron: 6
aliases.muon: 8
aliases.fakeLepCand_type: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0).type()] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1).type()]: [$(lep0).type()] ) )"

# CutEtaFakeElec
# CutEtaFakeMuon
aliases.fakeLepCand_eta: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0).eta()] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1).eta()] : [$(lep0).eta()])) "

# CutFakeElecID
# CutFakeMuonID
aliases.fakeLepCand_id: "([ZBosonPairFakeIndex]==3 ? [otherLep0ID]: ( [ZBosonPairFakeIndex]==2 ? [subleadLepID]: [leadLepID] ) )"

# CutFakeElecAntiID
# CutFakeMuonAntiID
aliases.fakeLepCand_antiid: "([ZBosonPairFakeIndex]==3 ? [otherLep0AntiID]: ( [ZBosonPairFakeIndex]==2 ? [subleadLepAntiID]: [leadLepAntiID] ) )"

# Truth type and origin of fake lep
aliases.fakeLepCand_truthType: "( [ZBosonPairFakeIndex]==3 ? ([[$(otherPart0).type()]==6] ? [CPID:$(otherPart0):firstEgMotherTruthType] : [CPID:$(otherPart0):truthType]) : ([ZBosonPairFakeIndex]==2 ? ([[$(lep1).type()]==6] ? [CPID:$(lep1):firstEgMotherTruthType] : [CPID:$(lep1):truthType]) : ([[$(lep0).type()]==6] ? [CPID:$(lep0):firstEgMotherTruthType] : [CPID:$(lep0):truthType])))"
aliases.fakeLepCand_truthOrigin: "( [ZBosonPairFakeIndex]==3 ? ([[$(otherPart0).type()]==6] ? [CPID:$(otherPart0):firstEgMotherTruthOrigin] : [CPID:$(otherPart0):truthOrigin]) : ([ZBosonPairFakeIndex]==2 ? ([[$(lep1).type()]==6] ? [CPID:$(lep1):firstEgMotherTruthOrigin] : [CPID:$(lep1):truthOrigin]) : ([[$(lep0).type()]==6] ? [CPID:$(lep0):firstEgMotherTruthOrigin] : [CPID:$(lep0):truthOrigin])))"

aliases.fakeLepCand_fakeFlavour: "[ZBosonPairFakeIndex]==3 ? [CPID:$(otherPart0):HIGG3DX_truthFlavourTag]: ([ZBosonPairFakeIndex]==2 ? [CPID:$(lep1):HIGG3DX_truthFlavourTag] : ([ZBosonPairFakeIndex]==1 ? [CPID:$(lep0):HIGG3DX_truthFlavourTag] : -999))"


# SFOS aliases for ZH Zjets FF
aliases.l0_charge: [CPFD:$(lep0):charge]
aliases.l1_charge: [CPFD:$(lep1):charge]
aliases.l2_charge: [CPFD:$(otherPart0):charge]

aliases.l0l1_is_SFOS: ( ([$(lep0).type()] == [$(lep1).type()]) && ($(l0_charge) != $(l1_charge) ) )
aliases.l0l2_is_SFOS: ( ([$(lep0).type()] == [$(otherPart0).type()]) && ($(l0_charge) != $(l2_charge) ) )
aliases.l1l2_is_SFOS: ( ([$(lep1).type()] == [$(otherPart0).type()]) && ($(l1_charge) != $(l2_charge) ) )

# CutPtLep
aliases.ZBosonLepPt: ( [ZBosonPairFakeIndex]==1 ? (([$(lep1).pt()] > 25000) && ([$(otherPart0).pt()] > 25000)) : [ZBosonPairFakeIndex]==2 ? (([$(lep0).pt()] > 25000) && ([$(otherPart0).pt()] > 25000)) : (([$(lep0).pt()] > 25000) && ([$(lep1).pt()] > 25000)))

###
### just For histograms
###
aliases.fakeLepCand_pt: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0).pt()] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1).pt()] : [$(lep0).pt()])) "
aliases.invMassOptZTag: "([ZBosonPairFakeIndex]==3 ? [invMassl0l1]: ( [ZBosonPairFakeIndex]==2 ? [invMassl0otherPart0]: ( [ZBosonPairFakeIndex]==1 ? [invMassl1otherPart0]: 0. ) ) )"

aliases.lep0_d0: [CPFD:$(lep0):d0]
aliases.lep1_d0: [CPFD:$(lep1):d0]
aliases.otherPart0_d0: [CPFD:$(otherPart0):d0]
aliases.fakeLepCand_d0: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_d0)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_d0)] : [$(lep0_d0)])) "

aliases.lep0_d0sig: [CPFD:$(lep0):d0sig]
aliases.lep1_d0sig: [CPFD:$(lep1):d0sig]
aliases.otherPart0_d0sig: [CPFD:$(otherPart0):d0sig]
aliases.fakeLepCand_d0sig: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_d0sig)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_d0sig)] : [$(lep0_d0sig)])) "

aliases.lep0_d0err: [CPFD:$(lep0):d0]/[CPFD:$(lep0):d0sig]
aliases.lep1_d0err: [CPFD:$(lep1):d0]/[CPFD:$(lep1):d0sig]
aliases.otherPart0_d0err: [CPFD:$(otherPart0):d0]/[CPFD:$(otherPart0):d0sig]
aliases.fakeLepCand_d0err: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_d0err)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_d0err)] : [$(lep0_d0err)])) "

aliases.lep0_z0: [CPFD:$(lep0):z0]
aliases.lep1_z0: [CPFD:$(lep1):z0]
aliases.otherPart0_z0: [CPFD:$(otherPart0):z0]
aliases.fakeLepCand_z0: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_z0)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_z0)] : [$(lep0_z0)])) "

aliases.lep0_z0st: [CPFD:$(lep0):z0]*[CPFD:$(lep0):sinTheta]
aliases.lep1_z0st: [CPFD:$(lep1):z0]*[CPFD:$(lep1):sinTheta]
aliases.otherPart0_z0st: [CPFD:$(otherPart0):z0]*[CPFD:$(otherPart0):sinTheta]
aliases.fakeLepCand_z0st: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_z0st)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_z0st)] : [$(lep0_z0st)])) "

aliases.lep0_isLHLoose: [CPCD:$(lep0):isLHLoose]
aliases.lep1_isLHLoose: [CPCD:$(lep1):isLHLoose]
aliases.otherPart0_isLHLoose: [CPCD:$(otherPart0):isLHLoose]
aliases.fakeLepCand_isLHLoose: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_isLHLoose)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_isLHLoose)] : [$(lep0_isLHLoose)])) "

aliases.lep0_author: [CPUSD:$(lep0):author]
aliases.lep1_author: [CPUSD:$(lep1):author]
aliases.otherPart0_author: [CPUSD:$(otherPart0):author]
aliases.fakeLepCand_author: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_author)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_author)] : [$(lep0_author)])) "

aliases.lep0_MuonQuality: [CPID:$(lep0):Quality]
aliases.lep1_MuonQuality: [CPID:$(lep1):Quality]
aliases.otherPart0_MuonQuality: [CPID:$(otherPart0):Quality]
aliases.fakeLepCand_MuonQuality: "([ZBosonPairFakeIndex]==3 ? [$(otherPart0_MuonQuality)] : ( [ZBosonPairFakeIndex]==2 ? [$(lep1_MuonQuality)] : [$(lep0_MuonQuality)])) "
