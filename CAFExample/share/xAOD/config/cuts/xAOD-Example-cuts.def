# -*- mode: tqfolder -*-
# this files name is 'cuts.txt'
# to get proper syntax highlighting and indentation when using emacs,
# add the following line to your .emacs file:
#   (load-file "$TQPATH/share/tqfolder.el")

+CutChannels {
    # to use the per-event event weights poperly, use "Weight" as .weightExpression here
    <.cutExpression = "$(fitsChannel)", .weightExpression = "[muonIsoWeight] * [muonTTVAWeight] * [muonRecoWeight] * [electronRecoWeight] * [electronIDWeight] * [jvtWeight] * [forwardJVTWeight] * [prwWeight] * [mcWeight]", .title="Channel Selection">

    +CutOtherLep {
        <.cutExpression = "$(lllFinalState)", .title = "lll final state">

        # make sure all leptons are above 15 GeV
        +CutLeptonsPt {
            <.cutExpression = " $(lep0).pt() > 15000 && $(lep1).pt() > 15000 && $(otherPart0).pt() > 15000", .title = "lep $p_T > 15$ GeV">

            +CutVgammaVjet_overlap {
                <.cutExpression = "{ $(isVjets) ? $(Truth_inVGammaOverlap)==0 : 1 }",  .title="Overlap: Vgamma/Vjets">

                # find the fake index by finding the most optimal Z-boson pair
                +CutZMass {
                    <.cutExpression = "[ZBosonPairFakeIndex]==3 || [ZBosonPairFakeIndex]==2 || [ZBosonPairFakeIndex]==1", .weightExpression = "[triggerWeight]", .title = "Z-tagging">

                    +CutTransMassW {
                        <.cutExpression = "$(TransMassW) < 50000.",   .title = "mT cut">
                        +CutAllLepIDOrAntiID{
                            <.cutExpression = "([leadLepID] || [leadLepAntiID]) && ([subleadLepID] || [subleadLepAntiID]) && ([otherLep0ID] || [otherLep0AntiID])", .title = "all three leptons ID or AntiID">
                            +CutFakeEl {
                                <.cutExpression = "$(fakeLepCand_type) == $(electron)", .title = "fake type: electron">
                                +CutEtaFakeElec {
                                    <.cutExpression = "(fabs($(fakeLepCand_eta)) < 2.47 && (fabs($(fakeLepCand_eta)) < 1.37 || fabs($(fakeLepCand_eta)) > 1.52))", .title = "Fake el eta cut">

                                    ##ID Selection
                                    +CutFakeElecID {
                                        <.cutExpression = "$(fakeLepCand_id)", .title = "ID cuts", flav_ID="ElecID">

                                    }
                                    ##Anti-ID selection
                                    +CutFakeElecAntiID {
                                        <.cutExpression = "$(fakeLepCand_antiid)", .title = "Anti-ID cuts", flav_ID="ElecAntiID">

                                    }

                                } #End: CutEtaFakeElec
                            } #End: CutFakeEl
                            +CutFakeMu {
                                <.cutExpression = "$(fakeLepCand_type)== $(muon)", .title = "fake type: muon">
                                +CutEtaFakeMuon {
                                    <.cutExpression = "fabs($(fakeLepCand_eta)) < 2.5", .title = "Fake mu |eta|<2.5 ">

                                    ##ID Selection
                                    +CutFakeMuonID {
                                        <.cutExpression = "$(fakeLepCand_id)", .title = "ID cuts", flav_ID="MuonID">

                                    }
                                    ##Anti-ID selection
                                    +CutFakeMuonAntiID {
                                        <.cutExpression = "$(fakeLepCand_antiid)", .title = "Anti-ID cuts", flav_ID="MuonAntiID">

                                    }

                                } #End: CutEtaFakeMuon
                            } #End: CutFakeMu
                        } #End: CutAllLepIDOrAntiID
                    } #End: CutTransMassW

                    +CutWZControl {
                        <.cutExpression = " ($(TransMassW) > 50000.) && $(fakeLepCand_id)",   .title = "WZ control">

                    } #End: CutWZControl

                } #End: CutZMass
            } #End: CutVgammaVjet_overlap
        } #End: CutLeptonsPt
    } #End: CutOtherLep
} #End: CutChannels
